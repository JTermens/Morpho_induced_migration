/*mesh T,Tb; // Perturbations of the circular domain, sharp points
if(Rini*(1-cos(pi-cut/2.)) > 2*ThickOutMesh){ // Ensures enough space for Lc and the inner mesh
  real t0 = (pi-cut)/2.;
  real t0L = -asin((ThickOutMesh-Rini*sin(t0))/(Rini-ThickOutMesh));
  border Gamma(t=-t0,pi+t0){x=Rini*cos(t);y=Rini*sin(t);label=1;}
  border GammaB(t=-Rini*cos(t0),Rini*cos(t0)){x=t;y=-Rini*sin(t0);label=1;}
  border Gamma2(t=-t0L,pi+t0L){x=(Rini-ThickOutMesh)*cos(t);y=(Rini-ThickOutMesh)*sin(t);label=2;}
  border Gamma2B(t=-(Rini-ThickOutMesh)*cos(t0L),(Rini-ThickOutMesh)*cos(t0L)){x=t;y=ThickOutMesh-Rini*sin(t0);label=2;}
  T=buildmesh(Gamma(obd*Rini*(pi+2*t0))+GammaB(obd*2*Rini*cos(t0))+Gamma2(ibd*(Rini-ThickOutMesh)*(pi+2*t0L))+Gamma2B(ibd*2*(Rini-ThickOutMesh)*cos(t0L)));
  T=change(T, rmInternalEdges=1);
  Tb=emptymesh(T);
}
else {
  cout << "The domain with R0 = "+R0+"; Lc = "+Lc+"; angle cut = "+cut+" is ill-posed." << endl;
  exit(1);
}*/

/*mesh T,Tb; // Bean domain
{
  real arclength = 3.931702;
  real t1 = 3*pi/4. + pi/4.;
  real t2 = 3*pi/4. - pi/4.;
  border Gamma(t=0,pi){x=Rini*(pow(cos(t+t1),3)+pow(sin(t+t2),3))*cos(t);
                  no_tension_remesh		 y=Rini*(pow(cos(t+t1),3)+pow(sin(t+t2),3))*sin(t);
                       label=1;}
  border Gamma2(t=0,pi){x=(Rini-ThickOutMesh)*(pow(cos(t+t1),3)+pow(sin(t+t2),3))*cos(t);
                        y=(Rini-ThickOutMesh)*(pow(cos(t+t1),3)+pow(sin(t+t2),3))*sin(t);
                        label=2;}
  T=buildmesh(Gamma(obd*Rini*arclength)+Gamma2(ibd*(Rini-ThickOutMesh)*arclength));
  T=change(T, rmInternalEdges=1);
  Tb=emptymesh(T);
}*/
/*
mesh T, Tb; // Circular domain
{
  border Gamma(t=0,2*pi){x=Rini*cos(t);y=Rini*sin(t);label=1;}
  border Gamma2(t=0,2*pi){x=(Rini-ThickOutMesh)*cos(t);y=(Rini-ThickOutMesh)*sin(t);label=2;}
  // T=buildmesh(Gamma(obd*Rini*2*pi)+Gamma2(ibd*(Rini-ThickOutMesh)*2*pi));
  // T=change(T, rmInternalEdges=1);
  T = buildmesh(Gamma(obd*2*pi*Rini)+Gamma2(ibd*2*pi*(Rini-ThickOutMesh)));
  T=change(T, rmInternalEdges=1);
  Tb=emptymesh(T);
}*/
