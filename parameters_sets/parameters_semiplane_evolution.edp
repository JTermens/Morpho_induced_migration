// Parameter file for simulations of the evolution of durotaxis
// by Joan Térmens; 06/03/2025 

verbosity=0;
// bool debug=0;

string rootDir = "/home/joan/Documents/Simul_runs/exploration_semiplane/evolutions";

int nSimul = 4;   // Number of simulations
string[int] simulNames = [
  "semiplane_zeta0_amp2",
  "semiplane_zeta50_amp2",
  "semiplane_zeta50_amp20",
  "semiplane_zeta120_amp20",
  "semiplane_zeta120_amp30",
  "semiplane_zeta150_amp20"
  ];

//{{0, 0.02}, {50, 0.02}, {50, 0.2}, {120, 0.2}, {120, 0.3}, {150, 0.2}};

// Physical parameters of each problem
real[int] ampList = [2, 2, 20, 20, 30, 20]; // Amplitude of the perturbation [um].
real[int] zetaList = -1*[0, 50, 50, 120, 120, 150]; // -Contractility coef, [kPa]. < 0 to generate contractile stress.

// Fixed parameters
real[int] l0List = 100*[1, 1, 1, 1, 1, 1];     // Initial radius of the monolayer, [μm].
real[int] LcList = 40*[1, 1, 1, 1, 1, 1];      // Nematic length, sqrt(K/a), [μm].
real[int] etaList = 2.5e4*[1, 1, 1, 1, 1, 1];  // Monolayer viscosity, [kPa·s].
real[int] xiList = 0.15625*[1, 1, 1, 1, 1, 1]; // Friction coef, [kPa·s/μm²].
real[int] ziList = 0.1*[1, 1, 1, 1, 1, 1];     // Traction coef, [kPa/μm].

int nFingers = 1;
real lx = 3200;

// Numerical parameters of the simulations
real obd = 40.;          // Outer boundary mesh density, obd points for adim. unit length.
real ibd = 10.;          // Inner boundary mesh density.
real bLayerWidth = 0.35; // Adim. width of the boundary layer (finer mesh), >= Lc/R0. 
real dt = 1e-3;          // Adim. time step, real time step = dt * eta/(zi0*Lc).
int NiterTime = 1000;    // Number of iterations, Max time = NiteTime * dt * eta/(zi0*Lc).
bool keepPoints = 0;     // Keep the number of boundary points upon remeshing.

// Save parameters
bool bsave = 1;          // To save the solutions or not, handy for debugging.
int dsave = 10;          // Save frame gap. Usually we do not need that many solutions to

